# Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.


# Where to find user code.

LIB_DIR = ./../../../library
LIB_DIR_O = ../../../lib
PUB_DIR = ../../pub
SO_DIR = ../../bin/plugins

THIRD_PATH = $(LIB_DIR)/mylib/public

CUSTOM_THIRD_PATH = $(LIB_DIR)/mylib/third_party

LINK_PATHS = -L./ -L/usr/local/libmemcached-1.0.7/lib/  -L/usr/lib64/mysql

# Flags passed to the preprocessor.
CPPFLAGS += -isystem -shared -fPIC -D_DEBUG -DUSR_LOG_MSG -D_REENTRANT -D_GNU_SOURCE -DUSR_LOG_ERROR  -DNET_WORK -DBRY_PTL

# Flags passed to the C++ compiler.
CXXFLAGS += -g  -Wextra -pthread -shared -fPIC

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
PLUGIN = $(SO_DIR)/stock/stock.so
                
INCLUDE_PATHS = -I/usr/local/libmemcached-1.0.7/include \
				-I$(LIB_DIR)/BasicCore\
				-I$(LIB_DIR)/mylib/public\
				-I$(PUB_DIR)\
				-I/usr/local/include\
				-I/usr/include/mysql\
				-I$(USER_DIR)\
				-I$(CUSTOM_THIRD_PATH)/hiredis\
				-I$(CUSTOM_THIRD_PATH)\
				-I$(LIB_DIR)/mylib/base\


# House-keeping build targets.

ALL_HEADERS = $(USER_HEADERS)
all : $(PLUGIN)

clean :
	rm -f $(PLUGIN)  *.o

# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
#GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
#gtest-all.o : $(GTEST_SRCS_)
#	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest-all.cc

#gtest_main.o : $(GTEST_SRCS_)
#	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest_main.cc

#gtest.a : gtest-all.o
#	$(AR) $(ARFLAGS) $@ $^

#gtest_main.a : gtest-all.o gtest_main.o
#	$(AR) $(ARFLAGS) $@ $^

# Builds a sample test.  A test should link with either gtest.a or
# gtest_main.a, depending on whether it defines its own main()
# function.

stock_init.o : ./stock_init.cc ./stock_init.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./stock_init.cc $(INCLUDE_PATHS) 

stock_logic.o : ./stock_logic.cc ./stock_logic.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./stock_logic.cc $(INCLUDE_PATHS)
	
stock_basic_info.o : ./stock_basic_info.cc ./stock_basic_info.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./stock_basic_info.cc $(INCLUDE_PATHS)

stock_db.o : ./stock_db.cc ./stock_db.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./stock_db.cc $(INCLUDE_PATHS)
	
stock_factory.o : ./stock_factory.cc ./stock_factory.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./stock_factory.cc $(INCLUDE_PATHS)

stock_user_mgr.o : ./stock_user_mgr.cc ./stock_user_mgr.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./stock_user_mgr.cc $(INCLUDE_PATHS)

stock_proto_buf.o : ./stock_proto_buf.cc ./stock_proto_buf.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./stock_proto_buf.cc $(INCLUDE_PATHS)

stock_packet_process.o : ./stock_packet_process.cc ./stock_packet_process.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./stock_packet_process.cc $(INCLUDE_PATHS)
	
packet_process.o : ./$(PUB_DIR)/net/packet_process.cc ./$(PUB_DIR)/net/packet_process.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./$(PUB_DIR)/net/packet_process.cc $(INCLUDE_PATHS)
	
proto_buf.o : ./$(PUB_DIR)/net/proto_buf.cc ./$(PUB_DIR)/net/proto_buf.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./$(PUB_DIR)/net/proto_buf.cc $(INCLUDE_PATHS)
	
data_engine.o : ./$(PUB_DIR)/storage/data_engine.cc ./$(PUB_DIR)/storage/data_engine.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./$(PUB_DIR)/storage/data_engine.cc $(INCLUDE_PATHS)

data_mysql_engine.o : ./$(PUB_DIR)/storage/data_mysql_engine.cc ./$(PUB_DIR)/storage/data_mysql_engine.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./$(PUB_DIR)/storage/data_mysql_engine.cc $(INCLUDE_PATHS)
	
mysql_pool.o : ./$(PUB_DIR)/storage/mysql_pool.cc ./$(PUB_DIR)/storage/mysql_pool.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./$(PUB_DIR)/storage/mysql_pool.cc $(INCLUDE_PATHS)

config.o: $(THIRD_PATH)/config/config.cc
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/config/config.cc $(INCLUDE_PATHS)

Observer.o : ./Observer.cpp ./Observer.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./Observer.cpp $(INCLUDE_PATHS)
	
Subject.o : ./Subject.cpp ./Subject.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./Subject.cpp $(INCLUDE_PATHS)
	
ObserverTest.o : ./ObserverTest.cpp ./ObserverTest.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./ObserverTest.cpp $(INCLUDE_PATHS)

$(TEST) : 

$(PLUGIN) : stock_init.o stock_logic.o stock_basic_info.o stock_db.o stock_factory.o config.o\
	stock_user_mgr.o Observer.o Subject.o ObserverTest.o stock_packet_process.o packet_process.o \
	stock_proto_buf.o proto_buf.o\
	data_engine.o data_mysql_engine.o mysql_pool.o \
	$(LIB_DIR)/mylib/base/lib/mybase.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(LINK_PATHS) -lexpat -lrt -lpthread -ldl -lmysqlclient \
	$^ -o $@
